/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1500
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/rgb.h>

&sk { release-after-ms = <1500>; };

&mmv {
    acceleration-exponent = <1>;
    time-to-max-speed-ms = <500>;
    delay-ms = <0>;
};

&msc {
    acceleration-exponent = <1>;
    time-to-max-speed-ms = <200>;
    delay-ms = <0>;
};

&num_word { layers = <8>; };

/ {
    combos {
        compatible = "zmk,combos";

        cb_esc {
            bindings = <&kp ESCAPE>;
            key-positions = <15 16>;
        };

        cb_ret {
            bindings = <&kp RET>;
            key-positions = <20 19>;
        };

        cut {
            bindings = <&kp LG(X)>;
            key-positions = <37 38>;
        };

        copy {
            bindings = <&kp LG(C)>;
            key-positions = <38 39>;
        };

        paste {
            bindings = <&kp LG(V)>;
            key-positions = <40 39>;
        };
    };

    behaviors {
        startup_layers: startup_layers {
            compatible = "zmk,behavior-startup-layers";
            #binding-cells = <0>;
            startup-layers-list = <1 2>;
        };

        /* thumb hold tap - rolling hold */

        tht_rh: tht_rh {
            compatible = "zmk,behavior-hold-tap";
            label = "THT_RH";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&kp>, <&kp>;

            require-prior-idle-ms = <100>;
            quick-tap-ms = <200>;
            hold-while-undecided;
        };

        /* thumb hold tap - rolling tap */

        tht_rt: tht_rt {
            compatible = "zmk,behavior-hold-tap";
            label = "THT_RT";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&kp>, <&kp>;

            require-prior-idle-ms = <350>;
            quick-tap-ms = <200>;
        };

        /* thumb hold tap - layer */

        thtl_rt: thtl_rt {
            compatible = "zmk,behavior-hold-tap";
            label = "THTL_RT";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            require-prior-idle-ms = <350>;
            quick-tap-ms = <200>;
            bindings = <&mo>, <&kp>;

            hold-while-undecided;
        };

        tht_caps: tht_caps {
            compatible = "zmk,behavior-hold-tap";
            label = "THT_CAPS";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&caps_word>;

            require-prior-idle-ms = <300>;
            quick-tap-ms = <200>;
            hold-while-undecided;
        };

        tht_num: tht_num {
            compatible = "zmk,behavior-hold-tap";
            label = "THT_NUM";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&num_word>;

            require-prior-idle-ms = <300>;
            quick-tap-ms = <200>;
            hold-while-undecided;
        };

        volley_r: volley_r {
            compatible = "zmk,behavior-hold-tap";
            label = "VOLLEY_R";
            #binding-cells = <2>;
            bindings = <&kp>, <&mo>;

            flavor = "hold-preferred";
            hold-trigger-key-positions = <0 1 2 3 4 5 17 16 15 14 13 12 24 25 26 27 28 29 41 40 39 38 37 36 42 43 55 53 52 51 50 54>;
            tapping-term-ms = <1500>;
            quick-tap-ms = <200>;
        };

        volley_l: volley_l {
            compatible = "zmk,behavior-hold-tap";
            label = "VOLLEY_L";
            #binding-cells = <2>;
            bindings = <&kp>, <&mo>;

            flavor = "hold-preferred";
            tapping-term-ms = <1500>;
            quick-tap-ms = <200>;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 44 45 46 47 48 49 42 43 50 51 52 53 54 55>;
            hold-while-undecided;
        };

        hrm_l: hrm_l {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM_L";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "balanced";
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 44 45 46 47 48 49 43 50 51 52 53 54 55>;
        };

        hrm_r: hrm_r {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM_R";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "balanced";
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41 42 43 50 51 52 53 54 55>;
        };

        hrl_l: hrl_l {
            compatible = "zmk,behavior-hold-tap";
            label = "HRL_L";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "balanced";
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 44 45 46 47 48 49 43 50 51 52 53 54 55>;
            bindings = <&mo>, <&kp>;
        };

        hrl_r: hrl_r {
            compatible = "zmk,behavior-hold-tap";
            label = "HRL_R";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "balanced";
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41 42 43 50 51 52 53 54 55>;
            bindings = <&mo>, <&kp>;
        };
    };

    macros {
        sym_up_dir: sym_up_dir {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DOT &kp DOT &kp FSLH>;
            label = "SYM_UP_DIR";
        };

        sym_double_colon: sym_double_colon {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp COLON &kp COLON>;
            label = "SYM_DOUBLE_COLON";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mt LS(LC(LA(LGUI))) GRAVE  &kp N1  &kp N2  &kp N3  &kp N4           &kp N5                                  &kp N6             &kp N7          &kp N8     &kp N9   &kp N0    &kp MINUS
&kp TAB                     &kp Q   &kp W   &kp E   &kp R            &kp T                                   &kp Y              &kp U           &kp I      &kp O    &kp P     &kp EQUAL
&mt LCTRL ESCAPE            &kp A   &kp S   &kp D   &kp F            &kp G                                   &kp H              &kp J           &kp K      &kp L    &kp SEMI  &kp SQT
&thtl_rt 10 GRAVE           &kp Z   &kp X   &kp C   &kp V            &kp B              &kp ESC   &kp ENTER  &kp N              &kp N           &kp COMMA  &kp DOT  &kp FSLH  &kp MINUS
                                                    &thtl_rt 12 TAB  &volley_l LSHFT 8  &kp BSPC  &kp SPACE  &volley_r RSHFT 7  &tht_caps 11 0
            >;
        };

        hrm_layer {
            bindings = <
&trans  &trans          &trans          &trans         &trans         &trans                         &trans         &trans         &trans         &trans          &trans             &trans
&trans  &trans          &trans          &trans         &trans         &trans                         &trans         &trans         &trans         &trans          &trans             &trans
&trans  &hrm_l LSHFT A  &hrm_l LCTRL S  &hrm_l LALT D  &hrm_l LGUI F  &hrm_l RALT G                  &hrm_r RALT H  &hrm_r RGUI J  &hrm_r LALT K  &hrm_r RCTRL L  &hrm_r RSHFT SEMI  &trans
&trans  &hrl_l 13 Z     &trans          &trans         &hrl_l 9 V     &trans         &trans  &trans  &trans         &hrl_r 9 M     &trans         &trans          &hrl_r 13 SLASH    &trans
                                                       &trans         &trans         &trans  &trans  &trans         &trans
            >;
        };

        relearn_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans           &trans                                       &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans           &trans                                       &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans           &trans                                       &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans           &trans  &trans            &trans             &trans  &trans  &trans  &trans  &trans  &trans
                                &thtl_rt 11 TAB  &trans  &thtl_rt 16 BSPC  &thtl_rt 16 SPACE  &trans  &trans
            >;
        };

        cdh_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans     &trans   &trans    &trans
&trans  &kp Q   &kp W   &kp F   &kp P   &kp B                   &kp J   &kp L   &kp U      &kp Y    &kp SEMI  &trans
&trans  &kp A   &kp R   &kp S   &kp T   &kp G                   &kp M   &kp N   &kp E      &kp I    &kp O     &trans
&trans  &kp Z   &kp X   &kp C   &kp D   &kp V   &trans  &trans  &kp K   &kp H   &kp COMMA  &kp DOT  &kp FSLH  &trans
                                &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        cmd_hrm_layer {
            bindings = <
&trans  &trans          &trans          &trans         &trans         &trans                         &trans         &trans         &trans         &trans          &trans           &trans
&trans  &trans          &trans          &trans         &trans         &trans                         &trans         &trans         &trans         &trans          &trans           &trans
&trans  &hrm_l LSHFT A  &hrm_l LCTRL R  &hrm_l LALT S  &hrm_l LGUI T  &hrm_l RALT G                  &hrm_r RALT M  &hrm_r RGUI N  &hrm_r LALT E  &hrm_r RCTRL I  &hrm_r RSHFT O   &trans
&trans  &hrl_l 13 Z     &trans          &trans         &hrl_l 9 D     &trans         &trans  &trans  &trans         &hrl_r 9 H     &trans         &trans          &hrl_r 13 SLASH  &trans
                                                       &trans         &trans         &trans  &trans  &trans         &trans
            >;
        };

        lh_mods_layer {
            bindings = <
&trans  &trans     &trans     &trans    &trans    &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans     &trans     &trans    &trans    &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &sk LSHFT  &sk LCTRL  &sk LALT  &sk LGUI  &sk RALT                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans     &trans     &trans    &sl 9     &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                                        &trans    &trans    &trans  &trans  &trans  &trans
            >;
        };

        rh_mods_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                  &trans    &trans    &trans    &trans     &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans    &trans    &trans    &trans     &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &sk RALT  &sk RGUI  &sk LALT  &sk RCTRL  &kp RSHFT  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans    &sl 9     &trans    &trans     &trans     &trans
                                &trans  &trans  &trans  &trans  &trans    &trans
            >;
        };

        nav_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                  &trans    &trans     &trans     &trans     &trans         &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &kp HOME  &kp PG_DN  &kp PG_UP  &kp END    &trans         &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT  &trans         &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp LBKT  &kp RBKT   &kp LBRC   &kp RBRC   &kp BACKSLASH  &kp PIPE
                                &mo 11  &trans  &trans  &trans  &trans    &trans
            >;
        };

        num_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &kp N7  &kp N8  &kp N9  &kp N0  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &kp N4  &kp N5  &kp N6  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp N1  &kp N2  &kp N3  &trans  &trans
                                &trans  &trans  &trans  &trans  &trans  &kp N0
            >;
        };

        sym_layer {
            bindings = <
&trans  &trans     &trans     &trans    &trans     &trans                       &trans     &trans             &trans    &trans    &trans     &trans
&trans  &kp SQT    &kp LT     &kp GT    &kp DQT    &kp DOT                      &kp AMPS   &sym_double_colon  &kp LBKT  &kp RBKT  &kp PRCNT  &trans
&trans  &kp EXCL   &kp MINUS  &kp PLUS  &kp EQUAL  &kp LA(N3)                   &kp PIPE   &kp COLON          &kp LPAR  &kp RPAR  &kp QMARK  &trans
&trans  &kp CARET  &kp FSLH   &kp STAR  &kp BSLH   &sym_up_dir  &trans  &trans  &kp TILDE  &kp DLLR           &kp LBRC  &kp RBRC  &kp AT     &trans
                                        &trans     &trans       &trans  &trans  &trans     &trans
            >;
        };

        media_layer {
            bindings = <
&bootloader  &tog 3      &tog 1        &tog 2        &tog 14  &sys_reset                  &sys_reset       &rgb_ug RGB_SPD  &rgb_ug RGB_SPI  &trans                             &trans                             &bootloader
&trans       &trans      &trans        &trans        &trans   &trans                      &rgb_ug RGB_TOG  &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &trans                             &trans                             &trans
&trans       &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP  &trans   &trans                      &rgb_ug RGB_EFF  &rgb_ug RGB_SAD  &rgb_ug RGB_SAI  &rgb_ug RGB_COLOR_HSB(298,100,41)  &rgb_ug RGB_COLOR_HSB(119,100,50)  &trans
&trans       &kp C_PREV  &kp C_PP      &kp C_NEXT    &trans   &trans      &trans  &trans  &trans           &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &rgb_ug RGB_COLOR_HSB(0,100,50)    &rgb_ug RGB_COLOR_HSB(242,0,0)     &trans
                                                     &trans   &trans      &trans  &trans  &trans           &trans
            >;
        };

        fn_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &kp F10  &kp F11  &kp F12  &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &kp F7   &kp F8   &kp F9   &kp F10  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &kp F4   &kp F5   &kp F6   &kp F11  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp F1   &kp F2   &kp F3   &kp F12  &trans
                                &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        mouse_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                     &trans          &trans          &trans          &trans           &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                     &trans          &trans          &mmv MOVE_UP    &trans           &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                     &trans          &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans     &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP    &msc SCRL_RIGHT  &trans  &trans
                                &trans  &trans  &trans  &mkp LCLK  &mkp RCLK       &mkp MCLK
            >;
        };

        hyper_layer {
            bindings = <
&trans  &kp LG(LA(LC(LS(N1))))  &kp LG(LA(LC(LS(N2))))  &kp LG(LA(LC(LS(N3))))  &kp LG(LA(LC(LS(N4))))  &kp LG(LA(LC(LS(N5))))                  &kp LG(LA(LC(LS(N6))))    &kp LG(LA(LC(LS(N7))))    &kp LG(LA(LC(LS(N8))))  &kp LG(LA(LC(LS(N9))))     &kp LG(LA(LC(LS(N0))))  &trans
&trans  &trans                  &trans                  &trans                  &trans                  &trans                                  &trans                    &trans                    &trans                  &trans                     &trans                  &trans
&trans  &trans                  &trans                  &trans                  &trans                  &trans                                  &kp LG(LA(LC(LS(LEFT))))  &kp LG(LA(LC(LS(DOWN))))  &kp LG(LA(LC(LS(UP))))  &kp LG(LA(LC(LS(RIGHT))))  &trans                  &trans
&trans  &trans                  &trans                  &trans                  &trans                  &trans                  &trans  &trans  &trans                    &trans                    &trans                  &trans                     &trans                  &trans
                                                                                &trans                  &trans                  &trans  &trans  &trans                    &trans
            >;
        };

        reduce_layer {
            bindings = <
&none   &none   &none   &none   &none   &none                   &none   &none   &none   &none   &none   &none
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                                &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        reduce_ex_layer {
            bindings = <
&none  &none   &none   &none   &none   &none                   &none   &none   &none   &none   &none   &none
&none  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &none
&none  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &none
&none  &trans  &trans  &trans  &trans  &trans  &none   &none   &trans  &trans  &trans  &trans  &trans  &none
                               &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        block_layer {
            bindings = <
&none  &none  &none  &none  &none  &none                &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none                &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none                &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none
                            &none  &none  &none  &none  &none  &none
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        lh_mods_extend {
            if-layers = <7>;
            then-layer = <5>;
        };

        lh_mods_num {
            if-layers = <8>;
            then-layer = <5>;
        };

        lh_mods_fn {
            if-layers = <11>;
            then-layer = <5>;
        };

        cdh_hrm {
            if-layers = <3 1>;
            then-layer = <4>;
        };
    };
};
