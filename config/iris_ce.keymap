/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

&sk { release-after-ms = <1500>; };

/ {
    combos {
        compatible = "zmk,combos";

        cb_esc {
            bindings = <&kp ESCAPE>;
            key-positions = <15 16>;
        };

        cb_ret {
            bindings = <&kp RET>;
            key-positions = <20 19>;
        };

        cut {
            bindings = <&kp LG(X)>;
            key-positions = <37 38>;
        };

        copy {
            bindings = <&kp LG(C)>;
            key-positions = <38 39>;
        };

        paste {
            bindings = <&kp LG(V)>;
            key-positions = <40 39>;
        };
    };

    behaviors {
        startup_layers: startup_layers {
            compatible = "zmk,behavior-startup-layers";
            #binding-cells = <0>;
            startup-layers-list = <1 4>;
        };

        tht_rh: tht_rh {
            compatible = "zmk,behavior-hold-tap";
            label = "THT_RH";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&kp>, <&kp>;

            require-prior-idle-ms = <100>;
            quick-tap-ms = <200>;
            hold-while-undecided;
        };

        volley_r: volley_r {
            compatible = "zmk,behavior-hold-tap";
            label = "VOLLEY_R";
            #binding-cells = <2>;
            bindings = <&kp>, <&mo>;

            flavor = "hold-preferred";
            hold-trigger-key-positions = <0 1 2 3 4 5 17 16 15 14 13 12 24 25 26 27 28 29 41 40 39 38 37 36 42 43 55 53 52 51 50 54>;
            tapping-term-ms = <1500>;
            quick-tap-ms = <200>;
        };

        tht_caps: tht_caps {
            compatible = "zmk,behavior-hold-tap";
            label = "THT_CAPS";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&caps_word>;

            require-prior-idle-ms = <300>;
            quick-tap-ms = <200>;
            hold-while-undecided;
        };

        hrm_l: hrm_l {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM_L";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "balanced";
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 44 45 46 47 48 49 43 50 51 52 53 54 55>;
        };

        hrm_r: hrm_r {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM_R";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "balanced";
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41 42 43 50 51 52 53 54 55>;
        };

        volley_l: volley_l {
            compatible = "zmk,behavior-hold-tap";
            label = "VOLLEY_L";
            #binding-cells = <2>;
            bindings = <&kp>, <&mo>;

            flavor = "hold-preferred";
            tapping-term-ms = <1500>;
            quick-tap-ms = <200>;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 44 45 46 47 48 49 42 43 50 51 52 53 54 55>;
            hold-while-undecided;
        };

        tht_rt: tht_rt {
            compatible = "zmk,behavior-hold-tap";
            label = "THT_RT";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&kp>, <&kp>;

            require-prior-idle-ms = <350>;
            quick-tap-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mt LS(LC(LA(LGUI))) GRAVE  &kp N1  &kp N2  &kp N3  &kp N4   &kp N5                                  &kp N6             &kp N7          &kp N8     &kp N9   &kp N0    &kp MINUS
&kp TAB                     &kp Q   &kp W   &kp E   &kp R    &kp T                                   &kp Y              &kp U           &kp I      &kp O    &kp P     &kp EQUAL
&mt LCTRL ESCAPE            &kp A   &kp S   &kp D   &kp F    &kp G                                   &kp H              &kp J           &kp K      &kp L    &kp SEMI  &kp SQT
&mo 10                      &kp Z   &kp X   &kp C   &kp V    &kp B              &kp ESC   &kp ENTER  &kp N              &kp N           &kp COMMA  &kp DOT  &kp FSLH  &kp MINUS
                                                    &kp TAB  &volley_l LSHFT 8  &kp BSPC  &kp SPACE  &volley_r RSHFT 7  &tht_caps 11 0
            >;
        };

        hrm_layer {
            bindings = <
&trans  &trans          &trans          &trans         &trans                     &trans                         &trans         &trans                     &trans         &trans          &trans             &trans
&trans  &trans          &trans          &trans         &trans                     &trans                         &trans         &trans                     &trans         &trans          &trans             &trans
&trans  &hrm_l LSHFT A  &hrm_l LCTRL S  &hrm_l LALT D  &hrm_l LGUI F              &hrm_l RALT G                  &hrm_r RALT H  &hrm_r RGUI J              &hrm_r LALT K  &hrm_r RCTRL L  &hrm_r RSHFT SEMI  &trans
&trans  &trans          &trans          &trans         &hrm_l LS(LC(LA(LGUI))) V  &trans         &trans  &trans  &trans         &hrm_r LS(LC(LA(LGUI))) M  &trans         &trans          &trans             &trans
                                                       &trans                     &trans         &trans  &trans  &trans         &trans
            >;
        };

        cdh_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans     &trans   &trans    &trans
&trans  &kp Q   &kp W   &kp F   &kp P   &kp B                   &kp J   &kp L   &kp U      &kp Y    &kp SEMI  &trans
&trans  &kp A   &kp R   &kp S   &kp T   &kp G                   &kp M   &kp N   &kp E      &kp I    &kp O     &trans
&trans  &kp Z   &kp X   &kp C   &kp D   &kp V   &trans  &trans  &kp K   &kp H   &kp COMMA  &kp DOT  &kp FSLH  &trans
                                &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        cmd_hrm_layer {
            bindings = <
&trans  &trans          &trans          &trans         &trans                     &trans                         &trans         &trans                     &trans         &trans          &trans          &trans
&trans  &trans          &trans          &trans         &trans                     &trans                         &trans         &trans                     &trans         &trans          &trans          &trans
&trans  &hrm_l LSHFT A  &hrm_l LCTRL R  &hrm_l LALT S  &hrm_l LGUI T              &hrm_l RALT G                  &hrm_r RALT M  &hrm_r RGUI N              &hrm_r LALT E  &hrm_r RCTRL I  &hrm_r RSHFT O  &trans
&trans  &trans          &trans          &trans         &hrm_l LS(LC(LA(LGUI))) D  &trans         &trans  &trans  &trans         &hrm_r LS(LC(LA(LGUI))) H  &trans         &trans          &trans          &trans
                                                       &trans                     &trans         &trans  &trans  &trans         &trans
            >;
        };

        hrm_easy_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans             &trans                                         &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans             &trans                                         &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans             &trans                                         &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans             &trans  &trans             &trans              &trans  &trans  &trans  &trans  &trans  &trans
                                &tht_rh LCTRL TAB  &trans  &tht_rh LGUI BSPC  &tht_rt RALT SPACE  &trans  &trans
            >;
        };

        lh_mods_layer {
            bindings = <
&trans  &trans     &trans     &trans    &trans                &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans     &trans     &trans    &trans                &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &sk LSHFT  &sk LCTRL  &sk LALT  &sk LGUI              &sk RALT                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans     &trans     &trans    &sk LS(LC(LA(LGUI)))  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                                        &trans                &trans    &trans  &trans  &trans  &trans
            >;
        };

        rh_mods_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                  &trans    &trans                &trans    &trans     &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans    &trans                &trans    &trans     &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &sk RALT  &sk RGUI              &sk LALT  &sk RCTRL  &kp RSHFT  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans    &kp LS(LC(LA(LGUI)))  &trans    &trans     &trans     &trans
                                &trans  &trans  &trans  &trans  &trans    &trans
            >;
        };

        extend_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                  &trans    &trans     &trans     &trans     &trans         &bootloader
&trans  &trans  &trans  &trans  &trans  &trans                  &kp HOME  &kp PG_DN  &kp PG_UP  &kp END    &trans         &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT  &trans         &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp LBKT  &kp RBKT   &kp LBRC   &kp RBRC   &kp BACKSLASH  &trans
                                &mo 11  &trans  &trans  &trans  &trans    &trans
            >;
        };

        num_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &kp N7  &kp N8  &kp N9  &kp N0  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &kp N4  &kp N5  &kp N6  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp N1  &kp N2  &kp N3  &trans  &trans
                                &trans  &trans  &trans  &trans  &trans  &kp N0
            >;
        };

        sym_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                                &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        media_layer {
            bindings = <
&bootloader  &tog 2      &tog 1        &tog 4        &tog 12  &rgb_ug RGB_TOG                  &trans  &trans  &trans  &trans  &trans  &trans
&trans       &trans      &trans        &trans        &trans   &trans                           &trans  &trans  &trans  &trans  &trans  &trans
&trans       &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP  &trans   &trans                           &trans  &trans  &trans  &trans  &trans  &trans
&trans       &kp C_PREV  &kp C_PP      &kp C_NEXT    &trans   &trans           &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                                                     &trans   &trans           &trans  &trans  &trans  &trans
            >;
        };

        fn_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &kp F10  &kp F11  &kp F12  &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &kp F7   &kp F8   &kp F9   &kp F10  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &kp F4   &kp F5   &kp F6   &kp F11  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp F1   &kp F2   &kp F3   &kp F12  &trans
                                &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        reduce_layer {
            bindings = <
&none   &none   &none   &none   &none   &none                   &none   &none   &none   &none   &none   &none
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                                &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        reduce_ex_layer {
            bindings = <
&none  &none   &none   &none   &none   &none                   &none   &none   &none   &none   &none   &none
&none  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &none
&none  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &none
&none  &trans  &trans  &trans  &trans  &trans  &none   &none   &trans  &trans  &trans  &trans  &trans  &none
                               &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        lh_mods_extend {
            if-layers = <7>;
            then-layer = <5>;
        };

        lh_mods_num {
            if-layers = <8>;
            then-layer = <5>;
        };

        lh_mods_fn {
            if-layers = <11>;
            then-layer = <5>;
        };

        cdh_hrm {
            if-layers = <2 1>;
            then-layer = <3>;
        };
    };
};
